rm(list = ls())
library(tidyverse)
library(dplyr)
library(textclean)
library(beepr)
library(textclean)
library(viridis)
install.packages("viridis")
library(viridis)
ttlplt <- read_csv("C:/Users/Yuri/Google Drive/Yuri/Mestrado/parcelas_biota/projeto/PPG/tese/analises/01_dados/padrao/life_form_yuri_2019v2.csv")
ttlplt[,23:24] <- lapply(ttlplt[,23:24], as.numeric)
ttlplt
#### numero de individuos de cada espÃ©cie
listaspcc <- ttlplt %>%
filter_row("Species", c("sp.", "cf.", "aff.", "Euterpe edulis")) %>%
select(-c(1,3,5:26,28))
listaspcc
listaspcc <- plyr::count(listaspcc$Species)
listaspcc
ggplot(data = listaspcc,
aes(x = fct_reorder(x, freq, .desc = TRUE),
y = freq)) +  theme_classic() +
theme(legend.position="top") +
geom_bar(stat = 'identity', colour="black", width = 0.55) +
scale_color_viridis(discrete = TRUE, option = "D") +
scale_fill_viridis(discrete = TRUE) +
theme(axis.text.x = element_text(angle=60, hjust=1, colour="black", size=rel(0.6))) +
theme(text = element_text(size=12)) + ylab("") + xlab("") +
expand_limits(y=1800) + scale_y_continuous(breaks=c(0,50,100,150,300,400,1800))
ttlplt_tree <- ttlplt %>%
filter(`Life Form` == "tree") %>%
filter_row("Species", c("sp.", "cf.","aff.")) %>%
mutate(Total = rowSums(.[6:22])) %>%
select(-c(1,3,5:26,28))
ttlplt_tree <- ttlplt %>%
filter(`Life Form` == "tree") %>%
textclean::drop_row("Species", c("sp.", "cf.","aff.")) %>%
mutate(Total = rowSums(.[6:22])) %>%
select(-c(1,3,5:26,28))
ttlplt_tree
ggplot(ttlplt_tree, aes(x= fct_reorder(Species, Total),
y = Total,
fill = Treatment)) +
geom_boxplot(width = 0.65) + coord_flip() +
scale_fill_manual(name = "Treatment", labels = c("Closed", "Open"),
values=c("slateblue1","tomato")) +
theme_bw() + geom_jitter(width=0.1,alpha=0.2) + ggtitle("Trees") +
theme(axis.text=element_text(size=8),
axis.title=element_text(size=12,face="bold"),
#panel.border = element_rect(linetype = "solid", size = 1.5, color = "black"),
#panel.grid.major.x = element_line(color = "gray", size = 0.8),
#panel.grid.major.y = element_line(color = "white"),
#panel.grid.minor.y = element_line(color = "white"),
legend.text = element_text(size = 14),
legend.title = element_text(size = 14, face = "bold"),
#legend.position = c(.95, .95),
#legend.justification = c("right", "top"),
legend.box.background = element_rect(),
legend.box.margin = margin(6, 6, 6, 6)
)  +
labs(x = "Species", y = "Time")
