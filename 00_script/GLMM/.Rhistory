size = 4, shape = 21, color = "black", stroke = 1.0) +
coord_flip() +
geom_hline(yintercept = 0, linetype=2) +
theme_classic() +
ylab("") + xlab("Trees competitors") +
scale_x_discrete(labels=c("Bamboos", "Herbs", "Shrubs", "Palms", "Lianas")) +
scale_fill_manual(values = c("tomato4", "seagreen"), labels = c("Closed","Open"), name = "Treatment") +
theme(
axis.title = element_text(size = 28),
axis.text.x = element_text(size = 22),
axis.text.y = element_text(size = 22),
legend.title = element_text(size = 20),
legend.text = element_text(size = 20),
legend.position = c(0.93, .8),
legend.background = element_rect(fill = "azure2", color = "black"),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "dimgrey"),
panel.background = element_rect(fill = "darkseagreen3", colour = "dimgrey",
size = 0.5, linetype = "solid")) +
annotate("text", label = "Positive", parse = FALSE, size = 8, x = 5.0, y = 0.015, fontface="bold", color = "gray17") +
annotate("text", label = "Negative", parse = FALSE, size = 8, x = 5.0, y = -0.02, fontface="bold", color = "gray17") +
expand_limits(y = 0.18) +
scale_y_continuous(breaks = c(-0.05,0.0, 0.05, 0.1, 0.15))
trees_graph
lianas <- life_forms %>%
filter(life_form == "lianas")
lianas
lianas$competitors <- factor(lianas$competitors, levels = unique(lianas$competitors))
lianas_graph <- ggplot(lianas, aes(x = reorder(competitors, desc(competitors)), y = estimate)) +
geom_errorbar(aes(ymin = estimate-sd, ymax = estimate+sd, fill = treatment),
position = position_dodge(0.5), width = 0.5, size = 0.5) +
geom_point(aes(fill = treatment), position = position_dodge(0.5),
size = 4, shape = 21, color = "black", stroke = 1.0) +
coord_flip() +
geom_hline(yintercept = 0, linetype=2) +
theme_classic() +
ylab("") + xlab("Lianas competitors") +
scale_x_discrete(labels=c("Bamboos", "Herbs", "Shrubs", "Palms", "Trees")) +
scale_fill_manual(values = c("tomato4", "seagreen"), labels = c("Closed","Open"), name = "Treatment") +
theme(
axis.title = element_text(size = 28),
axis.text.x = element_text(size = 22),
axis.text.y = element_text(size = 22),
legend.title = element_text(size = 16),
legend.text = element_text(size = 16),
legend.position = "none",
legend.background = element_rect(fill = "azure2", color = "black"),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "dimgrey"),
panel.background = element_rect(fill = "aquamarine3", colour = "dimgrey",
size = 0.5, linetype = "solid")) +
#annotate("text", label = 'atop(bold("A"))', parse = TRUE, size = 7, x = 4.8, y = 0.37) +
expand_limits(y=0.6)
lianas_graph
palms <- life_forms %>%
filter(life_form == "palms")
palms
palms$competitors <- factor(palms$competitors, levels = unique(palms$competitors))
palms_graph <- ggplot(palms, aes(x = reorder(competitors, desc(competitors)), y = estimate)) +
geom_errorbar(aes(ymin = estimate-sd, ymax = estimate+sd, fill = treatment),
position = position_dodge(0.5), width = 0.5, size = 0.5) +
geom_point(aes(fill = treatment), position = position_dodge(0.5),
size = 4, shape = 21, color = "black", stroke = 1.0) +
coord_flip() +
geom_hline(yintercept = 0, linetype=2) +
theme_classic() +
ylab("") + xlab("Palms competitors") +
scale_x_discrete(labels=c("Bamboos", "Herbs", "Shrubs", "Lianas", "Trees")) +
scale_fill_manual(values = c("tomato4", "seagreen"), labels = c("Closed","Open"), name = "Treatment") +
theme(
axis.title = element_text(size = 28),
axis.text.x = element_text(size = 22),
axis.text.y = element_text(size = 22),
legend.title = element_text(size = 12),
legend.text = element_text(size = 12),
legend.position = "none",
legend.background = element_rect(fill = "azure2", color = "black"),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "dimgrey"),
panel.background = element_rect(fill = "antiquewhite2", colour = "dimgrey",
size = 0.5, linetype = "solid")) +
#annotate("text", label = 'atop(bold("A"))', parse = TRUE, size = 7, x = 4.8, y = 0.37) +
expand_limits(y=0.75)
palms_graph
shrubs <- life_forms %>%
filter(life_form == "shrubs")
shrubs
shrubs$competitors <- factor(shrubs$competitors, levels = unique(shrubs$competitors))
shrubs_graph <- ggplot(shrubs, aes(x = reorder(competitors, desc(competitors)), y = estimate)) +
geom_errorbar(aes(ymin = estimate-sd, ymax = estimate+sd, fill = treatment),
position = position_dodge(0.5), width = 0.5, size = 0.5) +
geom_point(aes(fill = treatment), position = position_dodge(0.5),
size = 4, shape = 21, color = "black", stroke = 1.0) +
coord_flip() +
geom_hline(yintercept = 0, linetype=2) +
theme_classic() +
ylab("") + xlab("Shrubs competitors") +
scale_x_discrete(labels=c("Bamboos", "Herbs", "Palms", "Lianas", "Trees")) +
scale_fill_manual(values = c("tomato4", "seagreen"), labels = c("Closed","Open"), name = "Treatment") +
theme(
axis.title = element_text(size = 28),
axis.text.x = element_text(size = 22),
axis.text.y = element_text(size = 22),
legend.title = element_text(size = 12),
legend.text = element_text(size = 12),
legend.position = "none",
legend.background = element_rect(fill = "azure2", color = "black"),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "dimgrey"),
panel.background = element_rect(fill = "peachpuff1", colour = "dimgrey",
size = 0.5, linetype = "solid")) #+
#annotate("text", label = 'atop(bold("A"))', parse = TRUE, size = 7, x = 4.8, y = 0.37) +
scale_y_continuous(limits = c(-0.55, 0.50))
shrubs_graph
herbs <- life_forms %>%
filter(life_form == "herbs")
herbs
herbs$competitors <- factor(herbs$competitors, levels = unique(herbs$competitors))
herbs_graph <- ggplot(herbs, aes(x = reorder(competitors, desc(competitors)), y = estimate)) +
geom_errorbar(aes(ymin = estimate-sd, ymax = estimate+sd, fill = treatment),
position = position_dodge(0.5), width = 0.5, size = 0.5) +
geom_point(aes(fill = treatment), position = position_dodge(0.5),
size = 4, shape = 21, color = "black", stroke = 1.0) +
coord_flip() +
geom_hline(yintercept = 0, linetype=2) +
theme_classic() +
ylab("") + xlab("Herbs competitors") +
scale_x_discrete(labels=c("Bamboos", "Shrubs", "Palms", "Lianas", "Trees")) +
scale_fill_manual(values = c("tomato4", "seagreen"), labels = c("Closed","Open"), name = "Treatment") +
theme(
axis.title = element_text(size = 28),
axis.text.x = element_text(size = 22),
axis.text.y = element_text(size = 22),
legend.title = element_text(size = 12),
legend.text = element_text(size = 12),
legend.position = "none",
legend.background = element_rect(fill = "azure2", color = "black"),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "dimgrey"),
panel.background = element_rect(fill = "burlywood2", colour = "dimgrey",
size = 0.5, linetype = "solid")) +
#annotate("text", label = 'atop(bold("A"))', parse = TRUE, size = 7, x = 4.8, y = 0.37) +
expand_limits(y=0.32)
herbs_graph
bamboos <- life_forms %>%
filter(life_form == "bamboos")
bamboos
bamboos$competitors <- factor(bamboos$competitors, levels = unique(bamboos$competitors))
bamboos_graph <- ggplot(bamboos, aes(x = reorder(competitors, desc(competitors)), y = estimate)) +
geom_errorbar(aes(ymin = estimate-sd, ymax = estimate+sd, fill = treatment),
position = position_dodge(0.5), width = 0.5, size = 0.5) +
geom_point(aes(fill = treatment), position = position_dodge(0.5),
size = 4, shape = 21, color = "black", stroke = 1.0) +
coord_flip() +
geom_hline(yintercept = 0, linetype=2) +
theme_classic() +
ylab("Estimates") + xlab("Bamboos competitors") +
scale_x_discrete(labels=c("Herbs", "Shrubs", "Palms", "Lianas", "Trees")) +
scale_fill_manual(values = c("tomato4", "seagreen"), labels = c("Closed","Open"), name = "Treatment") +
theme(
axis.title = element_text(size = 28),
axis.text.x = element_text(size = 22),
axis.text.y = element_text(size = 22),
legend.title = element_text(size = 12),
legend.text = element_text(size = 12),
legend.position = "none",
legend.background = element_rect(fill = "azure2", color = "black"),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "dimgrey"),
panel.background = element_rect(fill = "burlywood3", colour = "dimgrey",
size = 0.5, linetype = "solid")) +
scale_y_continuous(limits = c(-0.43, 1.05))
bamboos_graph
figure <- ggarrange(trees_graph, lianas_graph, palms_graph,
shrubs_graph, herbs_graph, bamboos_graph,
ncol = 1, nrow = 6)
figure
figure <- ggarrange(trees_graph, lianas_graph, palms_graph,
shrubs_graph, herbs_graph, bamboos_graph,
ncol = 1, nrow = 6)
figure
ggsave("C:/Users/Yuri/Google Drive/Yuri/Mestrado/parcelas_biota/projeto/PPG/tese/analises/02_figuras/GLMM/competition_estimates/all_vs_life-form_27-04-20.png", width = 35, height = 60, units = "cm", dpi = 300)
rm(list = ls())
library(tidyverse)
library(rcompanion)
library(stringr)
library(MASS)
library(lmtest)
library(lme4)
library(car)
data_biota <- read_csv("C:/Users/Yuri/Google Drive/Yuri/Mestrado/parcelas_biota/projeto/PPG/tese/analises/01_dados/padrao/life_form_yuri_2020v1.csv")
glimpse(data_biota)
lf.rel.abun <- data_biota %>%
rename(life_form = `Life Form`) %>%
filter(!life_form == "indeterminate", !life_form == "arborescent fern") %>%
dplyr::select(-c(4,24:26,28)) %>%
gather(key = "Month", value = "value", 4:22) %>%
mutate(Time = as.numeric(Month %>% stringr::str_replace("T", ""))) %>% # copia a coluna de tempo e transforma em numerico
group_by(Site, Plot, Treatment, Time, Month, life_form) %>%
summarise(Abundance = sum(value)) %>%
#mutate(Abundance = Abundance / sum(Abundance)) %>%
spread(life_form, Abundance) %>%  #converte para widescreen+
replace(is.na(.), 0) %>%
ungroup() %>%
mutate(Treatment = as.factor(Treatment)) %>%
mutate(Treatment = fct_relevel(Treatment, c("open", "closed"))) %>%
mutate(nontrees = rowSums(.[6:10])) %>%
mutate(nonpalms = rowSums(.[c(6:8,10:11)])) %>%
mutate(nonlianas = rowSums(.[c(6:7,9:11)])) %>%
mutate(nonshrubs = rowSums(.[c(6:9,11)])) %>%
mutate(nonherbs = rowSums(.[c(6,8:11)])) %>%
mutate(nonbamboos = rowSums(.[c(7:11)]))
lf.rel.abun
plotNormalHistogram(lf.rel.abun$tree)
#when logged (which is what glmer does) the distribution is almost perfectlly gaussian
plotNormalHistogram(log(lf.rel.abun$tree+1))
mo1lf.tree.time <- glmer(cbind(tree,nontrees) ~ Treatment*log(Time+1) + (1 |Site/Plot/Month), family=binomial, data = lf.rel.abun)
summary(mo1lf.tree.time)
car::Anova(mo1lf.tree.time, type = "III", test.statistic="Chisq")
mo1lf.tree <- glmer(cbind(tree,nontrees) ~ (1 |Site/Plot/Month), family=binomial, data = total.lf)
mo1lf.tree <- glmer(cbind(tree,nontrees) ~ (1 |Site/Plot/Month), family=binomial, data = lf.rel.abun)
summary(mo1lf.tree)
car::Anova(mo1lf.tree, type = "III", test.statistic="Chisq")
anova(mo1lf.tree.time,mo1lf.tree)
plotNormalHistogram(lf.rel.abun$palm)
#when logged (which is what glmer does) the distribution is almost perfectlly gaussian
plotNormalHistogram(log(lf.rel.abun$palm+1))
mo1lf.palm.time <- glmer(cbind(palm,nonpalms) ~ Treatment*log(Time+1) + (1 |Site/Plot/Month), family = binomial, data = lf.rel.abun)
summary(mo1lf.palm.time)
car::Anova(mo1lf.palm.time, type = "III", test.statistic="Chisq")
mo1lf.palm <- glmer(cbind(palm,nonpalms) ~ (1 |Site/Plot/Month), family=binomial, data = lf.rel.abun)
summary(mo1lf.palm)
car::Anova(mo1lf.palm, type = "III", test.statistic="Chisq")
anova(mo1lf.palm.time,mo1lf.palm)
plotNormalHistogram(lf.rel.abun$liana)
#when logged (which is what glmer does) the distribution is almost perfectlly gaussian
plotNormalHistogram(log(lf.rel.abun$liana+1))
# GLM
#first simple glms (Poisson vs negative binomial fit)
poisglm.rel.abn.liana<- glm(liana~ Treatment*log(Time+1), family="poisson", data = lf.rel.abun)
poisglm.rel.abn.liana
nbglm.rel.abn.liana<- glm.nb(liana~ Treatment*log(Time+1), data = lf.rel.abun)
nbglm.rel.abn.liana
#LRtest shows negative binomial better fit
lrtest(poisglm.rel.abn.liana,nbglm.rel.abn.liana)
summary(nbglm.rel.abn.liana)
mo1lf.liana.time <- glmer(cbind(liana,nonlianas) ~ Treatment*log(Time+1) + (1 |Site/Plot/Month), family = binomial, data = lf.rel.abun)
summary(mo1lf.liana.time)
mo1lf.liana.time.rel.abu.nb <- glmer.nb(cbind(liana,nonlianas)~ Treatment*log(Time+1) + (1 |Site/Plot/Month), data = lf.rel.abun)
lf.rel.abun
rm(list = ls())
library(tidyverse)
library(rcompanion)
library(stringr)
library(MASS)
library(lmtest)
library(lme4)
library(car)
install.packages("glmmTMB")
library(glmmTMB)
data_biota <- read_csv("C:/Users/Yuri/Google Drive/Yuri/Mestrado/parcelas_biota/projeto/PPG/tese/analises/01_dados/padrao/life_form_yuri_2020v1.csv")
glimpse(data_biota)
lf.rel.abun <- data_biota %>%
rename(life_form = `Life Form`) %>%
filter(!life_form == "indeterminate", !life_form == "arborescent fern") %>%
dplyr::select(-c(4,24:26,28)) %>%
gather(key = "Month", value = "value", 4:22) %>%
mutate(Time = as.numeric(Month %>% stringr::str_replace("T", ""))) %>% # copia a coluna de tempo e transforma em numerico
group_by(Site, Plot, Treatment, Time, Month, life_form) %>%
summarise(Abundance = sum(value)) %>%
#mutate(Abundance = Abundance / sum(Abundance)) %>%
spread(life_form, Abundance) %>%  #converte para widescreen+
replace(is.na(.), 0) %>%
ungroup() %>%
mutate(Treatment = as.factor(Treatment)) %>%
mutate(Treatment = fct_relevel(Treatment, c("open", "closed"))) %>%
mutate(nontrees = rowSums(.[6:10])) %>%
mutate(nonpalms = rowSums(.[c(6:8,10:11)])) %>%
mutate(nonlianas = rowSums(.[c(6:7,9:11)])) %>%
mutate(nonshrubs = rowSums(.[c(6:9,11)])) %>%
mutate(nonherbs = rowSums(.[c(6,8:11)])) %>%
mutate(nonbamboos = rowSums(.[c(7:11)]))
lf.rel.abun
plotNormalHistogram(lf.rel.abun$tree)
#when logged (which is what glmer does) the distribution is almost perfectlly gaussian
plotNormalHistogram(log(lf.rel.abun$tree+1))
mo1lf.tree.time <- glmer(cbind(tree,nontrees) ~ Treatment*log(Time+1) + (1 |Site/Plot/Month), family=binomial, data = lf.rel.abun)
summary(mo1lf.tree.time)
car::Anova(mo1lf.tree.time, type = "III", test.statistic="Chisq")
mo1lf.tree <- glmer(cbind(tree,nontrees) ~ (1 |Site/Plot/Month), family=binomial, data = lf.rel.abun)
summary(mo1lf.tree)
car::Anova(mo1lf.tree, type = "III", test.statistic="Chisq")
anova(mo1lf.tree.time,mo1lf.tree)
plotNormalHistogram(lf.rel.abun$palm)
#when logged (which is what glmer does) the distribution is almost perfectlly gaussian
plotNormalHistogram(log(lf.rel.abun$palm+1))
mo1lf.palm.time <- glmer(cbind(palm,nonpalms) ~ Treatment*log(Time+1) + (1 |Site/Plot/Month), family = binomial, data = lf.rel.abun)
summary(mo1lf.palm.time)
car::Anova(mo1lf.palm.time, type = "III", test.statistic="Chisq")
mo1lf.palm <- glmer(cbind(palm,nonpalms) ~ (1 |Site/Plot/Month), family=binomial, data = lf.rel.abun)
summary(mo1lf.palm)
car::Anova(mo1lf.palm, type = "III", test.statistic="Chisq")
anova(mo1lf.palm.time,mo1lf.palm)
mo1lf.liana.time <- glmer(cbind(liana,nonlianas) ~ Treatment*log(Time+1) + (1 |Site/Plot/Month), family = binomial, data = lf.rel.abun)
summary(mo1lf.liana.time)
mo1lf.liana.time.rel.abu.nb <- glmer.nb(cbind(liana,nonlianas)~ Treatment*log(Time+1) + (1 |Site/Plot/Month), data = lf.rel.abun)
mo1lf.liana.time.rel.abu.nb <- glmmTMB(cbind(liana,nonlianas)~ Treatment*log(Time+1) + (1 |Site/Plot/Month), family = binomial, data = lf.rel.abun)
summary(mo1lf.liana.time.nb)
summary(mo1lf.liana.time.rel.abu.nb)
mo1lf.liana.time.rel.abu.nb <- glmmTMB(cbind(liana,nonlianas)~ Treatment*log(Time+1) + (1 |Site/Plot/Month), family = "NB2", data = lf.rel.abun)
mo1lf.liana.time.rel.abu.nb <- glmmTMB(cbind(liana,nonlianas)~ Treatment*log(Time+1) + (1 |Site/Plot/Month), family = NB2, data = lf.rel.abun)
mo1lf.liana.time.rel.abu.nb <- glmmTMB(cbind(liana,nonlianas)~ Treatment*log(Time+1) + (1 |Site/Plot/Month), family = binomial, data = lf.rel.abun)
mo1lf.liana.time.rel.abu.nb <- glmmTMB(cbind(liana,nonlianas)~ Treatment*log(Time+1) + (1 |Site/Plot/Month), ziformula=~1, family = binomial, data = lf.rel.abun)
summary(mo1lf.liana.time.rel.abu.nb)
mo1lf.liana.time.rel.abu.nb <- glmmTMB(cbind(liana,nonlianas)~ Treatment*log(Time+1) + (1 |Site/Plot/Month), ziformula=~0, family = binomial, data = lf.rel.abun)
summary(mo1lf.liana.time.rel.abu.nb)
mo1lf.liana.time.rel.abu.nb <- glmmTMB(cbind(liana,nonlianas)~ Treatment*log(Time+1) + (1 |Site/Plot/Month), ziformula=~1, family = poisson, data = lf.rel.abun)
mo1lf.liana.time.rel.abu.nb <- glmmTMB(cbind(liana,nonlianas)~ Treatment*log(Time+1) + (1 |Site/Plot/Month), ziformula=~1, family = binomial, data = lf.rel.abun)
summary(mo1lf.liana.time.rel.abu.nb)
summary(mo1lf.liana.time)
mo1lf.liana.time.rel.abu <- glmer(cbind(liana,nonlianas) ~ Treatment*log(Time+1) + (1 |Site/Plot/Month), family = binomial, data = lf.rel.abun)
summary(mo1lf.liana.time)
mo1lf.liana.time.rel.abu.zi <- glmmTMB(cbind(liana,nonlianas)~ Treatment*log(Time+1) + (1 |Site/Plot/Month), ziformula=~1, family = binomial, data = lf.rel.abun)
summary(mo1lf.liana.time.rel.abu.nb)
#again better fit negative binomial
#the singular fit in both models is because
#there?s almost no temporal variation (month in the random effects)
lrtest(mo1lf.liana.time.rel.abu,mo1lf.liana.time.rel.abu.zi)
summary(mo1lf.liana.time)
summary(mo1lf.liana.time.rel.abu.nb)
summary(mo1lf.liana.time)
summary(mo1lf.liana.time.rel.abu)
summary(mo1lf.liana.time.rel.abu.zi)
summary(mo1lf.liana.time.rel.abu)
summary(mo1lf.liana.time.rel.abu.zi)
#again better fit negative binomial
#the singular fit in both models is because
#there?s almost no temporal variation (month in the random effects)
lrtest(mo1lf.liana.time.rel.abu, mo1lf.liana.time.rel.abu.zi)
mo1lf.liana.rel.abu <- glmer(cbind(tree,nontrees) ~ (1 |Site/Plot/Month), family=binomial, data = lf.rel.abun)
summary(mo1lf.liana.rel.abu)
mo1lf.liana.rel.abu <- glmer(cbind(liana,nonlianas) ~ (1 |Site/Plot/Month), family=binomial, data = lf.rel.abun)
summary(mo1lf.liana.rel.abu)
car::Anova(mo1lf.liana.rel.abu, type = "III", test.statistic="Chisq")
anova(mo1lf.liana.time.rel.abu.liana.rel.abu)
anova(mo1lf.liana.time.rel.abu, mo1lf.liana.rel.abu)
plotNormalHistogram(lf.rel.abun$shrub)
#when logged (which is what glmer does) the distribution is almost perfectlly gaussian
plotNormalHistogram(log(lf.rel.abun$shrub+1))
mo1lf.shrub.time.rel.abu <- glmer(cbind(shrub,nonshrubs) ~ Treatment*log(Time+1) + (1 |Site/Plot/Month), family = binomial, data = lf.rel.abun)
summary(mo1lf.shrub.time.rel.abu)
mo1lf.shrub.time.rel.abu.zi <- glmmTMB(cbind(shrub,nonshrubs)~ Treatment*log(Time+1) + (1 |Site/Plot/Month), ziformula=~1, family = binomial, data = lf.rel.abun)
summary(mo1lf.shrub.time.rel.abu.zi)
lrtest(mo1lf.shrub.time.rel.abu, mo1lf.shrub.time.rel.abu.zi)
anova(mo1lf.shrub.time.rel.abu, mo1lf.shrub.time.rel.abu.zi)
mo1lf.liana.rel.abu.zi <- glmer(cbind(liana,nonlianas) ~ (1 |Site/Plot/Month), ziformula=~1, family=binomial, data = lf.rel.abun)
summary(mo1lf.liana.rel.abu.zi)
summary(mo1lf.liana.rel.abu)
summary(mo1lf.liana.rel.abu.zi)
summary(mo1lf.liana.rel.abu)
# no interaction model
mo1lf.liana.rel.abu <- glmer(cbind(liana,nonlianas) ~ (1 |Site/Plot/Month), family=binomial, data = lf.rel.abun)
summary(mo1lf.liana.rel.abu)
mo1lf.liana.rel.abu.zi <- glmer(cbind(liana,nonlianas) ~ (1 |Site/Plot/Month), ziformula=~1, family=binomial, data = lf.rel.abun)
summary(mo1lf.liana.rel.abu.zi)
mo1lf.liana.rel.abu.zi <- glmerTMB(cbind(liana,nonlianas) ~ (1 |Site/Plot/Month), ziformula=~1, family=binomial, data = lf.rel.abun)
mo1lf.liana.rel.abu.zi <- glmmTMB(cbind(liana,nonlianas) ~ (1 |Site/Plot/Month), ziformula=~1, family=binomial, data = lf.rel.abun)
summary(mo1lf.liana.rel.abu.zi)
mo1lf.shrub.time.rel.abu <- glmer(cbind(shrub,nonshrubs) ~ Treatment*log(Time+1) + (1 |Site/Plot/Month), family = binomial, data = lf.rel.abun)
summary(mo1lf.shrub.time.rel.abu)
mo1lf.shrub.time.rel.abu.zi <- glmmTMB(cbind(shrub,nonshrubs)~ Treatment*log(Time+1) + (1 |Site/Plot/Month), ziformula=~1, family = binomial, data = lf.rel.abun)
summary(mo1lf.shrub.time.rel.abu.zi)
lrtest(mo1lf.shrub.time.rel.abu, mo1lf.shrub.time.rel.abu.zi)
summary(mo1lf.shrub.time.rel.abu)
summary(mo1lf.shrub.time.rel.abu.zi)
car::Anova(mo1lf.shrub.time.rel.abu.zi, type = "III", test.statistic="Chisq") # best model
# no interaction model
mo1lf.shrub.rel.abu <- glmer(cbind(shrub,nonshrubs) ~ (1 |Site/Plot/Month), family=binomial, data = lf.rel.abun)
summary(mo1lf.shrub.rel.abu)
mo1lf.shrub.rel.abu.zi <- glmmTMB(cbind(shrub,nonshrubs) ~ (1 |Site/Plot/Month), ziformula=~1, family=binomial, data = lf.rel.abun)
summary(mo1lf.shrub.rel.abu.zi)
# testing the interaction contribution Weight
anova(mo1lf.shrub.time.rel.abu.zi, mo1lf.shrub.rel.abu.zi)
plotNormalHistogram(lf.rel.abun$herb)
#when logged (which is what glmer does) the distribution is almost perfectlly gaussian
plotNormalHistogram(log(lf.rel.abun$herb+1))
mo1lf.herb.time.rel.abu <- glmer(cbind(herb,nonherbs) ~ Treatment*log(Time+1) + (1 |Site/Plot/Month), family = binomial, data = lf.rel.abun)
summary(mo1lf.herb.time.rel.abu)
mo1lf.herb.time.rel.abu.zi <- glmmTMB(cbind(herb,nonherbs)~ Treatment*log(Time+1) + (1 |Site/Plot/Month), ziformula=~1, family = binomial, data = lf.rel.abun)
summary(mo1lf.herb.time.rel.abu.zi)
lrtest(mo1lf.herb.time.rel.abu, mo1lf.herb.time.rel.abu.zi)
car::Anova(mo1lf.herb.time.rel.abu, type = "III", test.statistic="Chisq") # best model
# no interaction model
mo1lf.herb.rel.abu <- glmer(cbind(herb,nonherbs) ~ (1 |Site/Plot/Month), family=binomial, data = lf.rel.abun)
summary(mo1lf.herb.rel.abu)
mo1lf.herb.rel.abu.zi <- glmmTMB(cbind(herb,nonherbs) ~ (1 |Site/Plot/Month), ziformula=~1, family=binomial, data = lf.rel.abun)
summary(mo1lf.herb.rel.abu.zi)
car::Anova(mo1lf.herb.rel.abu, type = "III", test.statistic="Chisq") # best model
# testing the interaction contribution Weight
anova(mo1lf.herb.time.rel.abu, mo1lf.herb.rel.abu)
plotNormalHistogram(lf.rel.abun$bamboo)
#when logged (which is what glmer does) the distribution is almost perfectlly gaussian
plotNormalHistogram(log(lf.rel.abun$bamboo+1))
mo1lf.bamboo.time.rel.abu <- glmer(cbind(bamboo,nonbamboos) ~ Treatment*log(Time+1) + (1 |Site/Plot/Month), family = binomial, data = lf.rel.abun)
summary(mo1lf.bamboo.time.rel.abu)
mo1lf.bamboo.time.rel.abu.zi <- glmmTMB(cbind(bamboo,nonbamboos)~ Treatment*log(Time+1) + (1 |Site/Plot/Month), ziformula=~1, family = binomial, data = lf.rel.abun)
summary(mo1lf.bamboo.time.rel.abu.zi)
lrtest(mo1lf.bamboo.time.rel.abu, mo1lf.bamboo.time.rel.abu.zi)
car::Anova(mo1lf.bamboo.time.rel.abu, type = "III", test.statistic="Chisq") # best model
summary(mo1lf.bamboo.time.rel.abu)
summary(mo1lf.bamboo.time.rel.abu.zi)
car::Anova(mo1lf.bamboo.time.rel.abu.zi, type = "III", test.statistic="Chisq") # best model
# no interaction model
mo1lf.bamboo.rel.abu <- glmer(cbind(bamboo,nonbamboos) ~ (1 |Site/Plot/Month), family=binomial, data = lf.rel.abun)
summary(mo1lf.bamboo.rel.abu)
mo1lf.bamboo.rel.abu.zi <- glmmTMB(cbind(bamboo,nonbamboos) ~ (1 |Site/Plot/Month), ziformula=~1, family=binomial, data = lf.rel.abun)
summary(mo1lf.bamboo.rel.abu.zi)
car::Anova(mo1lf.bamboo.rel.abu.zi, type = "III", test.statistic="Chisq") # best model
car::Anova(mo1lf.bamboo.rel.abu.zi, type = "III", test.statistic="Chisq") # best model
mo1lf.bamboo.rel.abu.zi <- glmmTMB(cbind(bamboo,nonbamboos) ~ (1 |Site/Plot/Month), ziformula=~1, family=binomial, data = lf.rel.abun)
summary(mo1lf.bamboo.rel.abu.zi)
car::Anova(mo1lf.bamboo.rel.abu.zi, type = "III", test.statistic="Chisq") # best model
library("bbmle") ## for AICtab
install.packages("bbmle") ## for AICtab
library(glmmTMB) ## zero inflation
library(bbmle) ## for AICtab
mo1lf.bamboo.time.rel.abu <- glmer(cbind(bamboo,nonbamboos) ~ Treatment*log(Time+1) + (1 |Site/Plot/Month), family = binomial, data = lf.rel.abun)
summary(mo1lf.bamboo.time.rel.abu)
mo1lf.bamboo.time.rel.abu.zi <- glmmTMB(cbind(bamboo,nonbamboos)~ Treatment*log(Time+1) + (1 |Site/Plot/Month), ziformula=~1, family = binomial, data = lf.rel.abun)
summary(mo1lf.bamboo.time.rel.abu.zi)
lrtest(mo1lf.bamboo.time.rel.abu, mo1lf.bamboo.time.rel.abu.zi)
car::Anova(mo1lf.bamboo.time.rel.abu.zi, type = "III", test.statistic="Chisq") # best model
# no interaction model
mo1lf.bamboo.rel.abu <- glmer(cbind(bamboo,nonbamboos) ~ (1 |Site/Plot/Month), family=binomial, data = lf.rel.abun)
summary(mo1lf.bamboo.rel.abu)
mo1lf.bamboo.rel.abu.zi <- glmmTMB(cbind(bamboo,nonbamboos) ~ (1 |Site/Plot/Month), ziformula=~1, family=binomial, data = lf.rel.abun)
summary(mo1lf.bamboo.rel.abu.zi)
car::Anova(mo1lf.bamboo.rel.abu.zi, type = "III", test.statistic="Chisq") # best model
summary(mo1lf.bamboo.rel.abu)
car::Anova(mo1lf.bamboo.rel.abu.zi, type = "III", test.statistic="Chisq") # best model
car::Anova(mo1lf.bamboo.rel.abu, type = "III", test.statistic="Chisq") # best model
car::Anova(mo1lf.bamboo.rel.abu.zi, type = "II", test.statistic="Chisq") # best model
car::Anova(mo1lf.bamboo.rel.abu.zi, type = "III", test.statistic="Chisq") # best model
anova(mo1lf.bamboo.rel.abu, mo1lf.bamboo.rel.abu.zi)
car::Anova(mo1lf.bamboo.rel.abu, type = "III", test.statistic="Chisq") # best model
summary(mo1lf.bamboo.rel.abu.zi) # ANOVA does not work for this
summary(mo1lf.bamboo.rel.abu)
summary(mo1lf.bamboo.rel.abu.zi) # ANOVA does not work for this
# testing the interaction contribution Weight
anova(mo1lf.bamboo.time.rel.abu.zi, mo1lf.bamboo.rel.abu)
car::Anova(mo1lf.bamboo.time.rel.abu.zi, type = "III", test.statistic="Chisq") # best model
summary(mo1lf.bamboo.time.rel.abu.zi)
# testing the interaction contribution Weight
anova(mo1lf.bamboo.time.rel.abu, mo1lf.bamboo.rel.abu)
car::Anova(mo1lf.bamboo.time.rel.abu.zi, type = "III", test.statistic="Chisq") # best model
# testing the interaction contribution Weight
anova(mo1lf.bamboo.time.rel.abu.zi, mo1lf.bamboo.rel.abu)
# testing the interaction contribution Weight
anova(mo1lf.bamboo.time.rel.abu.zi, mo1lf.bamboo.rel.abu,zi)
# testing the interaction contribution Weight
anova(mo1lf.bamboo.time.rel.abu.zi, mo1lf.bamboo.rel.abu.zi)
summary(mo1lf.tree.time)
-0.86170 + 0.068
mo1lf.palm.time <- glmer(cbind(palm,nonpalms) ~ Treatment*log(Time+1) + (1 |Site/Plot/Month), family = binomial, data = lf.rel.abun)
summary(mo1lf.palm.time)
summary(mo1lf.tree.time)
summary(mo1lf.palm.time)
-0.898 + -0.557
-0.149 + 0.124
summary(mo1lf.liana.time.rel.abu)
summary(mo1lf.liana.time.rel.abu.zi)
summary(mo1lf.liana.time.rel.abu)
# GLMM
#now let?s compare binomial with negative binomial GLMMs
-4.382 + 1.174
# GLMM
#now let?s compare binomial with negative binomial GLMMs
0.221 + -0.239
summary(mo1lf.shrub.time.rel.abu.zi)
# GLMM
-2.791 + 0.376
# GLMM
-0.021 + -0.067
summary(mo1lf.herb.time.rel.abu)
-1.746 + 0.187
0.094 + -0.079
summary(mo1lf.bamboo.time.rel.abu.zi)
-7.652 + -0.090
0.003 + 0.008
anova(mo1lf.tree.time,mo1lf.tree)
anova(mo1lf.palm.time,mo1lf.palm)
# testing the interaction contribution Weight
anova(mo1lf.liana.time.rel.abu, mo1lf.liana.rel.abu)
# testing the interaction contribution Weight
anova(mo1lf.shrub.time.rel.abu.zi, mo1lf.shrub.rel.abu.zi)
# testing the interaction contribution Weight
anova(mo1lf.herb.time.rel.abu, mo1lf.herb.rel.abu)
summary(mo1lf.bamboo.time.rel.abu.zi)
# testing the interaction contribution Weight
anova(mo1lf.bamboo.time.rel.abu.zi, mo1lf.bamboo.rel.abu.zi) # ANOVA compartion worked to the best model ZI
