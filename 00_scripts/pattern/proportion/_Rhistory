rm(list = ls())
library(tidyverse)
library(dplyr)
library(plyr)
library(textclean)
library(beepr)
library(viridis)
ttlplt <- read_csv("C:/Users/Yuri/Google Drive/Yuri/Mestrado/parcelas_biota/projeto/PPG/tese/analises/01_dados/padrao/life_form_yuri_2019v2.csv")
ttlplt[,23:24] <- lapply(ttlplt[,23:24], as.numeric)
ttlplt
#### numero de individuos de cada espécie
listaspcc <- ttlplt %>%
filter_row("Species", c("sp.", "cf.", "aff.", "Euterpe edulis")) %>%
select(-c(1,3,5:26,28))
listaspcc
listaspcc <- plyr::count(listaspcc$Species)
listaspcc
ggplot(data = listaspcc,
aes(x = fct_reorder(x, freq, .desc = TRUE),
y = freq)) +  theme_classic() +
theme(legend.position="top") +
geom_bar(stat = 'identity', colour="black", width = 0.55) +
scale_color_viridis(discrete = TRUE, option = "D") +
scale_fill_viridis(discrete = TRUE) +
theme(axis.text.x = element_text(angle=60, hjust=1, colour="black", size=rel(0.6))) +
theme(text = element_text(size=12)) + ylab("") + xlab("") +
expand_limits(y=1800) + scale_y_continuous(breaks=c(0,50,100,150,300,400,1800))
#### Palmeiras
ttlplt_palm <- ttlplt %>%
filter(`Life Form` == "palm") %>%
filter_row("Species", c("sp.", "cf.","aff.", "Rubiaceae", "Myrtaceae")) %>%
mutate(Total = rowSums(.[6:22])) %>%
select(-c(1,3,5:26,28))
ttlplt_palm
ggplot(ttlplt_palm, aes(x= fct_reorder(Species, Total),
y = Total,
fill = Treatment)) +
geom_boxplot(width = 0.65) + coord_flip() +
scale_fill_manual(name = "Treatment", labels = c("Closed", "Open"),
values=c("slateblue1","tomato")) +
theme_bw() + geom_jitter(width=0.1,alpha=0.2) + ggtitle("Palms") +
theme(axis.text=element_text(size=8),
axis.title=element_text(size=12,face="bold"),
#panel.border = element_rect(linetype = "solid", size = 1.5, color = "black"),
#panel.grid.major.x = element_line(color = "gray", size = 0.8),
#panel.grid.major.y = element_line(color = "white"),
#panel.grid.minor.y = element_line(color = "white"),
legend.text = element_text(size = 14),
legend.title = element_text(size = 14, face = "bold"),
#legend.position = c(.95, .95),
#legend.justification = c("right", "top"),
legend.box.background = element_rect(),
legend.box.margin = margin(6, 6, 6, 6)
)  +
labs(x = "Species", y = "Time")
ggplot(ttlplt, aes(x=Period, y=Freq, fill = Tratment)) +
geom_boxplot(width = 0.65) + geom_hline(yintercept = median(ttlplt$Freq, na.rm = T), lty = 5, col = "blue", size = 0.8) +
scale_fill_manual(name = "Treatment", labels = c("Close", "Open"), values=c("slateblue1","tomato")) +  theme_bw() +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"),
panel.border = element_rect(linetype = "solid", size = 1.5, color = "black"),
panel.grid.major.x = element_line(color = "gray", size = 0.8),
panel.grid.major.y = element_line(color = "white"),
#panel.grid.minor.y = element_line(color = "white"),
legend.text = element_text(size = 14),
legend.title = element_text(size = 14, face = "bold"),
legend.position = c(.95, .95),
legend.justification = c("right", "top"),
legend.box.background = element_rect(),
legend.box.margin = margin(6, 6, 6, 6)
)  + expand_limits(y=150) + scale_y_continuous(breaks=c(0,50,100,150)) +
expand_limits(x=108) + scale_x_continuous(breaks=c(0,06,12,18,24,30,36,42,48,54,60,
66,72,78,84,90,96,102,108)) +
labs(x = "Time (month)", y = "Seedlings persistence")
rm(list = ls())
library(tidyverse)
library(dplyr)
library(plyr)
library(textclean)
library(beepr)
library(viridis)
ttlplt <- read_csv("C:/Users/Yuri/Google Drive/Yuri/Mestrado/parcelas_biota/projeto/PPG/tese/analises/01_dados/padrao/life_form_yuri_2019v2.csv")
ttlplt[,23:24] <- lapply(ttlplt[,23:24], as.numeric)
ttlplt
listaspcc <- ttlplt %>%
filter_row("Species", c("sp.", "cf.", "aff.", "Euterpe edulis")) %>%
select(-c(1,3,5:26,28))
listaspcc
listaspcc <- plyr::count(listaspcc$Species)
listaspcc
sum(listaspcc$freq)
proporcao <- listaspcc %>%
mutate(prop = ((freq*100))/sum(freq)) %>%
mutate(bolean = prop >= 1) %>%
arrange(prop)
proporcao
names(proporcao)[1] <- "Species"
proporcao
ggplot(data = proporcao,
aes(x = fct_reorder(Species, prop, .desc = TRUE),
y = prop, fill = bolean)) +  theme_bw() +
theme(legend.position="none") +
geom_bar(stat = 'identity', colour="black", width = 0.55) +
scale_fill_manual(values=c("slateblue1","tomato")) +
theme(axis.text.x = element_text(angle=60, hjust=1, colour="black", size=rel(0.6))) +
theme(text = element_text(size=15)) + ylab("") + xlab("") +
expand_limits(y=20) + scale_y_continuous(breaks=c(0,5,10,15,20))
listaspcc <- ttlplt %>%
filter(`Site` == "CAR") %>%
filter_row("Species", c("sp.", "cf.", "aff.", "Euterpe edulis")) %>%
select(-c(1,3,5:26,28))
listaspcc
listaspcc <- plyr::count(listaspcc$Species)
listaspcc
proporcao <- listaspcc %>%
mutate(prop = ((freq*100))/sum(freq)) %>%
mutate(bolean = prop >= 1) %>%
arrange(prop) %>%
filter_row("bolean", "FALSE")
proporcao
ggplot(data = proporcao,
aes(x = fct_reorder(x, prop, .desc = TRUE),
y = prop, fill = bolean)) +  theme_bw() +
theme(legend.position="none") +
geom_bar(stat = 'identity', colour="black", width = 0.55) +
scale_fill_manual(values=c("tomato")) +
theme(axis.text.x = element_text(angle=60, hjust=1, colour="black", size=rel(0.6))) +
theme(text = element_text(size=30)) + ylab("") + xlab("") +
expand_limits(y=70) + scale_y_continuous(breaks=c(0,10,20,30,40,50,60,70))
library(tidyverse)
library(dplyr)
library(plyr)
library(textclean)
library(wesanderson)
library(beepr)
rm(list = ls())
ttlplt <- read_csv("C:/Users/Yuri/Google Drive/Yuri/Mestrado/parcelas_biota/projeto/PPG/tese/analises/01_dados/padrao/life_form_yuri_2019v2.csv")
ttlplt[,23:24] <- lapply(ttlplt[,23:24], as.numeric) #transforma as colunas 23 e 24 em numerico
ttlplt
ttlpltlf <- table(ttlplt$Species,ttlplt$`Life Form`) #converse a coluna de forma de vida em uma matriz,
#junto com as espécies, mostrando qual espécies pertence a quais grupos de vida
ttlpltlf
### precisa fazer esse processo abaixo para poder converter a tabela a cima em uma formato lido pelo tidyverse (tibble)
write.csv(ttlpltlf , "teste_7-4-19.csv", row.names = TRUE, quote = TRUE) # Salva em uma tabela
ttlpltlf  <- read_csv("teste_7-4-19.csv") # carrega essa tabela.
ttlpltlf
unlink("teste_7-4-19.csv") # deleta a tabela da pasta
listaspcc <- ttlpltlf  %>%
gather(key = "lifeform", value = "freq", 2:8) #coloca todas as colunas da matriz em uma unica
listaspcc
names(listaspcc)[1] <- "Species" # da o cabeçario de Species para a coluna X1
listaspcclf <- listaspcc %>%
dplyr::filter(!grepl("cf.$", Species)) %>% # remover os cf. que estejam no final do nome
textclean::drop_row("Species", c("sp.","Rubiaceae", "Myrtaceae")) %>% # remove os 3 elementos listados
filter(`freq` > 0) %>% # remove as espécies que foram preenchidas por outro grupo funcional
# e mantém só aquelas que estão representadas pelo grupo funcional correto
mutate(prop = ((freq*100))/sum(freq)) %>% #faz um calculo de proporção de individuos por spp e salva em uma coluna
mutate(bolean = prop >= 1) %>% # preenche uma coluna com oque está acima de 1% de contribuição
arrange(prop) %>% # organizada em ordem
textclean::drop_row("bolean", "FALSE") # remove tudo oque for FALSE da coluna bolean
listaspcclf
colunas <- c("Species", "lifeform", "freq", "prop", "bolean")
todaspp <- data.frame("Others 151 sp. < 1% ...", "Mixed", 1, 1.0, FALSE)
# coloco os valores 1 e 1.0 para ficar localizado no final do gráfico,
#mas os valos corretos seriam 957 individuos representando juntos 22.35%
names(todaspp) <- colunas
listaspcclf <- rbind(listaspcclf,todaspp)
listaspcclf
sum(listaspcclf$freq)
ggplot(data = listaspcclf,
aes(x = fct_reorder(Species, prop, .desc = TRUE),
y = prop, fill = bolean)) +  theme_bw() +
theme(legend.position="none") +
geom_bar(stat = 'identity', colour="black", width = 0.55) +
scale_fill_manual(values=wes_palette("Cavalcanti1")) +
theme(axis.text.x = element_text(angle=60, hjust=1, colour="black", size=rel(0.6))) +
theme(text = element_text(size=20)) + ylab("Proportion (%)") + xlab("Species") +
expand_limits(y=40) + scale_y_continuous(breaks=c(0,10,20,30,40))
ttlpltcar <- ttlplt %>%
filter(`Site` == "CAR")
ttlpltlf <- table(ttlpltcar$Species,ttlpltcar$`Life Form`)
ttlpltlf
write.csv(ttlpltlf , "teste_7-4-19_car.csv", row.names = TRUE, quote = TRUE)
ttlpltlfcar  <- read_csv("teste_7-4-19_car.csv")
unlink("teste_7-4-19_car.csv")
ttlpltlfcar
listaspccCAR <- ttlpltlfcar  %>%
gather(key = "lifeform", value = "freq", 2:7)
listaspccCAR
names(listaspccCAR)[1] <- "Species"
listaspcclfCAR <- listaspccCAR %>%
dplyr::filter(!grepl("cf.$", Species)) %>%
filter_row("Species", c("sp.", "Myrtaceae", "Rubiaceae")) %>%
filter(`freq` > 0) %>%
mutate(prop = ((freq*100))/sum(freq)) %>%
mutate(bolean = prop >= 1) %>%
arrange(prop) %>%
filter_row("bolean", "FALSE")
listaspcclfCAR
sum(listaspcclfCAR$prop)
colunas <- c("Species", "lifeform", "freq", "prop", "bolean")
todasppCAR <- data.frame("Others 52 sp. < 1% ...", "Mixed", 1, 1.0, TRUE)
# coloco os valores 1 e 1.0 para ficar localizado no final do gráfico,
#mas os valos corretos seriam 166 individuos representando juntos 12.82%
names(todasppCAR) <- colunas
listaspcclfCAR <- rbind(listaspcclfCAR,todasppCAR)
listaspcclfCAR
ggplot(data = listaspcclfCAR,
aes(x = fct_reorder(Species, prop, .desc = TRUE),
y = prop, fill = lifeform)) +  theme_bw() +
theme(legend.position="none") +
geom_bar(stat = 'identity', colour="black", width = 0.55) +
scale_fill_manual(values=c("gold2", "aquamarine2","royalblue4", "cyan3")) +
theme(axis.text.x = element_text(angle=60, hjust=1, colour="black", size=rel(0.6))) +
theme(text = element_text(size=20)) + ylab("") + xlab("") +
#theme(plot.background = element_rect(fill = "gray")) +
expand_limits(y=70) + scale_y_continuous(breaks=c(0,10,20,30,40,50,60,70))
ggsave("C:/Users/Yuri/Google Drive/Yuri/Mestrado/parcelas_biota/projeto/PPG/tese/analises/02_figuras/padrao/proporcao/especies_lifeform_total_CAR_euterpe_cf.JPEG", he = 15, wi = 15, un = "cm", dpi = 300)
ttlplt <- read_csv("C:/Users/Yuri/Google Drive/Yuri/Mestrado/parcelas_biota/projeto/PPG/tese/analises/01_dados/padrao/life_form_yuri_2019v2.csv")
library(tidyverse)
library(dplyr)
library(plyr)
library(textclean)
library(wesanderson)
library(beepr)
rm(list = ls())
ttlplt <- read_csv("C:/Users/Yuri/Google Drive/Yuri/Mestrado/parcelas_biota/projeto/PPG/tese/analises/01_dados/padrao/life_form_yuri_2019v2.csv")
ttlplt[,23:24] <- lapply(ttlplt[,23:24], as.numeric) #transforma as colunas 23 e 24 em numerico
ttlplt
ttlpltlf <- table(ttlplt$Species,ttlplt$`Life Form`) #converse a coluna de forma de vida em uma matriz,
#junto com as espécies, mostrando qual espécies pertence a quais grupos de vida
ttlpltlf
### precisa fazer esse processo abaixo para poder converter a tabela a cima em uma formato lido pelo tidyverse (tibble)
write.csv(ttlpltlf , "teste_7-4-19.csv", row.names = TRUE, quote = TRUE) # Salva em uma tabela
ttlpltlf  <- read_csv("teste_7-4-19.csv") # carrega essa tabela.
ttlpltlf
unlink("teste_7-4-19.csv") # deleta a tabela da pasta
listaspcc <- ttlpltlf  %>%
gather(key = "lifeform", value = "freq", 2:8) #coloca todas as colunas da matriz em uma unica
listaspcc
names(listaspcc)[1] <- "Species" # da o cabeçario de Species para a coluna X1
listaspcclf <- listaspcc %>%
dplyr::filter(!grepl("cf.$", Species)) %>% # remover os cf. que estejam no final do nome
textclean::drop_row("Species", c("sp.","Rubiaceae", "Myrtaceae")) %>% # remove os 3 elementos listados
filter(`freq` > 0) %>% # remove as espécies que foram preenchidas por outro grupo funcional
# e mantém só aquelas que estão representadas pelo grupo funcional correto
mutate(prop = ((freq*100))/sum(freq)) %>% #faz um calculo de proporção de individuos por spp e salva em uma coluna
mutate(bolean = prop >= 1) %>% # preenche uma coluna com oque está acima de 1% de contribuição
arrange(prop) %>% # organizada em ordem
textclean::drop_row("bolean", "FALSE") # remove tudo oque for FALSE da coluna bolean
listaspcclf
ttlplt <- read_csv("C:/Users/Yuri/Google Drive/Yuri/Mestrado/parcelas_biota/projeto/PPG/tese/analises/01_dados/padrao/life_form_yuri_2019v2.csv")
ttlplt[,23:24] <- lapply(ttlplt[,23:24], as.numeric) #transforma as colunas 23 e 24 em numerico
ttlplt
ttlpltlf <- table(ttlplt$Species,ttlplt$`Life Form`) #converse a coluna de forma de vida em uma matriz,
#junto com as espécies, mostrando qual espécies pertence a quais grupos de vida
ttlpltlf
### precisa fazer esse processo abaixo para poder converter a tabela a cima em uma formato lido pelo tidyverse (tibble)
write.csv(ttlpltlf , "teste_7-4-19.csv", row.names = TRUE, quote = TRUE) # Salva em uma tabela
ttlpltlf  <- read_csv("teste_7-4-19.csv") # carrega essa tabela.
ttlpltlf
unlink("teste_7-4-19.csv") # deleta a tabela da pasta
ttlpltlf
listaspcc <- ttlpltlf  %>%
gather(key = "lifeform", value = "freq", 2:8) #coloca todas as colunas da matriz em uma unica
listaspcc
names(listaspcc)[1] <- "Species" # da o cabeçario de Species para a coluna X1
rm(list = ls())
library(tidyverse)
library(dplyr)
library(plyr)
library(textclean)
library(beepr)
library(viridis)
ttlplt <- read_csv("C:/Users/Yuri/Google Drive/Yuri/Mestrado/parcelas_biota/projeto/PPG/tese/analises/01_dados/padrao/life_form_yuri_2019v2.csv")
ttlplt[,23:24] <- lapply(ttlplt[,23:24], as.numeric)
ttlplt
#### numero de individuos de cada espécie
listaspcc <- ttlplt %>%
filter_row("Species", c("sp.", "cf.", "aff.", "Euterpe edulis")) %>%
select(-c(1,3,5:26,28))
listaspcc
listaspcc <- plyr::count(listaspcc$Species)
listaspcc
ggplot(data = listaspcc,
aes(x = fct_reorder(x, freq, .desc = TRUE),
y = freq)) +  theme_classic() +
theme(legend.position="top") +
geom_bar(stat = 'identity', colour="black", width = 0.55) +
scale_color_viridis(discrete = TRUE, option = "D") +
scale_fill_viridis(discrete = TRUE) +
theme(axis.text.x = element_text(angle=60, hjust=1, colour="black", size=rel(0.6))) +
theme(text = element_text(size=12)) + ylab("") + xlab("") +
expand_limits(y=1800) + scale_y_continuous(breaks=c(0,50,100,150,300,400,1800))
ttlpltlf <- table(ttlplt$Species,ttlplt$`Life Form`) #converse a coluna de forma de vida em uma matriz,
#junto com as espécies, mostrando qual espécies pertence a quais grupos de vida
ttlpltlf
### precisa fazer esse processo abaixo para poder converter a tabela a cima em uma formato lido pelo tidyverse (tibble)
write.csv(ttlpltlf , "teste_7-4-19.csv", row.names = TRUE, quote = TRUE) # Salva em uma tabela
ttlpltlf  <- read_csv("teste_7-4-19.csv") # carrega essa tabela.
ttlpltlf
unlink("teste_7-4-19.csv") # deleta a tabela da pasta
listaspcc <- ttlpltlf  %>%
gather(key = "lifeform", value = "freq", 2:8) #coloca todas as colunas da matriz em uma unica
listaspcc
names(listaspcc)[1] <- "Species" # da o cabeçario de Species para a coluna X1
listaspcclf <- listaspcc %>%
dplyr::filter(!grepl("cf.$", Species)) %>% # remover os cf. que estejam no final do nome
textclean::drop_row("Species", c("sp.","Rubiaceae", "Myrtaceae")) %>% # remove os 3 elementos listados
filter(`freq` > 0) %>% # remove as espécies que foram preenchidas por outro grupo funcional
# e mantém só aquelas que estão representadas pelo grupo funcional correto
mutate(prop = ((freq*100))/sum(freq)) %>% #faz um calculo de proporção de individuos por spp e salva em uma coluna
mutate(bolean = prop >= 1) %>% # preenche uma coluna com oque está acima de 1% de contribuição
arrange(prop) %>% # organizada em ordem
textclean::drop_row("bolean", "FALSE") # remove tudo oque for FALSE da coluna bolean
listaspcclf
colunas <- c("Species", "lifeform", "freq", "prop", "bolean")
listaspcclf <- listaspcc %>%
dplyr::filter(!grepl("cf.$", Species)) %>% # remover os cf. que estejam no final do nome
textclean::drop_row("Species", c("sp.","Rubiaceae", "Myrtaceae")) %>% # remove os 3 elementos listados
filter(`freq` > 0) %>% # remove as espécies que foram preenchidas por outro grupo funcional
# e mantém só aquelas que estão representadas pelo grupo funcional correto
mutate(prop = ((freq*100))/sum(freq)) %>% #faz um calculo de proporção de individuos por spp e salva em uma coluna
mutate(bolean = prop >= 1) %>% # preenche uma coluna com oque está acima de 1% de contribuição
arrange(prop) %>% # organizada em ordem
textclean::drop_row("bolean", "FALSE") # remove tudo oque for FALSE da coluna bolean
listaspcclf
listaspcclf <- listaspcc %>%
dplyr::filter(!grepl("cf.$", Species)) %>% # remover os cf. que estejam no final do nome
textclean::drop_row("Species", c("sp.","Rubiaceae", "Myrtaceae")) %>% # remove os 3 elementos listados
filter(`freq` > 0) %>% # remove as espécies que foram preenchidas por outro grupo funcional
# e mantém só aquelas que estão representadas pelo grupo funcional correto
mutate(prop = ((freq*100))/sum(freq)) %>% #faz um calculo de proporção de individuos por spp e salva em uma coluna
#mutate(bolean = prop >= 1) %>% # preenche uma coluna com oque está acima de 1% de contribuição
arrange(prop) %>% # organizada em ordem
textclean::drop_row("bolean", "FALSE") # remove tudo oque for FALSE da coluna bolean
listaspcclf <- listaspcc %>%
dplyr::filter(!grepl("cf.$", Species)) %>% # remover os cf. que estejam no final do nome
textclean::drop_row("Species", c("sp.","Rubiaceae", "Myrtaceae")) %>% # remove os 3 elementos listados
filter(`freq` > 0) %>% # remove as espécies que foram preenchidas por outro grupo funcional
# e mantém só aquelas que estão representadas pelo grupo funcional correto
mutate(prop = ((freq*100))/sum(freq)) %>% #faz um calculo de proporção de individuos por spp e salva em uma coluna
mutate(bolean = prop >= 1) %>% # preenche uma coluna com oque está acima de 1% de contribuição
arrange(prop) %>% # organizada em ordem
textclean::drop_row("bolean", "FALSE") # remove tudo oque for FALSE da coluna bolean
listaspcclf
listaspcclf <- listaspcc %>%
dplyr::filter(!grepl("cf.$", Species)) %>% # remover os cf. que estejam no final do nome
textclean::drop_row("Species", c("sp.","Rubiaceae", "Myrtaceae")) %>% # remove os 3 elementos listados
filter(`freq` > 0) %>% # remove as espécies que foram preenchidas por outro grupo funcional
# e mantém só aquelas que estão representadas pelo grupo funcional correto
mutate(prop = ((freq*100))/sum(freq)) %>% #faz um calculo de proporção de individuos por spp e salva em uma coluna
mutate(bolean = prop >= 1) %>% # preenche uma coluna com oque está acima de 1% de contribuição
arrange(prop) # organizada em ordem
#textclean::drop_row("bolean", "FALSE") # remove tudo oque for FALSE da coluna bolean
listaspcclf
write_csv2(listaspcclf, "C:/Users/Yuri/Google Drive/Yuri/Mestrado/parcelas_biota/projeto/PPG/tese/analises/01_dados/padrao/proporca_especies_biota.csv")
write_csv(listaspcclf, "C:/Users/Yuri/Google Drive/Yuri/Mestrado/parcelas_biota/projeto/PPG/tese/analises/01_dados/padrao/proporca_especies_biota.csv")
